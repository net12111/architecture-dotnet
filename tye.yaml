name: coolstore

extensions:
- name: dapr
  log-level: debug
  config: appconfig
  components-path: "./components"
# - name: zipkin
# - name: elastic
  # logPath: ./.logs

services:

- name: postgres
  image:  postgres
  env:
  - name: POSTGRES_PASSWORD
    value: P@ssw0rd
  bindings:
  - port: 5432
    connectionString: Server=${host};Port=${port};User Id=postgres;Password=${env:POSTGRES_PASSWORD};

- name: redis
  image: redis
  bindings:
  - port: 6379

- name: productserviceapp
  project: src/Product/ProductService.Application/ProductService.Application.csproj
  env:
  - name: ConnectionStrings__postgres
    value: Server=postgresql;Port=5432;Database=postgres;User Id=postgres;Password=${env:POSTGRES_PASSWORD};
  bindings:
  - port: 5002

- name: customerapp
  project: src/Customer/CustomerService.Application/CustomerService.Application.csproj
  env:
  - name: ConnectionStrings__postgres
    value: Server=postgresql;Port=5432;Database=postgres;User Id=postgres;Password=${env:POSTGRES_PASSWORD};
  bindings:
  - port: 5003

- name: settingapp
  project: src/Setting/SettingService.Application/SettingService.Application.csproj
  env:
  - name: ConnectionStrings__postgres
    value: Server=postgresql;Port=5432;Database=postgres;User Id=postgres;Password=${env:POSTGRES_PASSWORD};
  bindings:
  - port: 5005

- name: auditapp
  dockerFile: rs/audit_service/Dockerfile
  env:
  - name: HOST
    value: 0.0.0.0
  - name: DATABASE_URL
    value: postgres://postgres/postgres?user=postgres&password=P@ssw0rd
  bindings:
  - protocol: http
    port: 5010
